{"ast":null,"code":"import React from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function BattleArena(_ref){let{playerPokemon,playerMove,enemyPokemon,enemyMove}=_ref;const simulateBattle=()=>{const playerWin=Math.random()>0.5;const winner=playerWin?playerPokemon.name:enemyPokemon.name;return\"Winner is \".concat(winner,\" using \").concat(playerWin?playerMove:enemyMove);};return/*#__PURE__*/_jsxs(\"div\",{className:\"BattleArena\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Battle Results\"}),/*#__PURE__*/_jsx(\"p\",{children:simulateBattle()})]});}export default BattleArena;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","BattleArena","_ref","playerPokemon","playerMove","enemyPokemon","enemyMove","simulateBattle","playerWin","Math","random","winner","name","concat","className","children"],"sources":["/workspaces/Checkers-Game/src/BattleArena.js"],"sourcesContent":["import React from \"react\";\n\nfunction BattleArena({ playerPokemon, playerMove, enemyPokemon, enemyMove }) {\n  const simulateBattle = () => {\n    const playerWin = Math.random() > 0.5;\n    const winner = playerWin ? playerPokemon.name : enemyPokemon.name;\n    return `Winner is ${winner} using ${playerWin ? playerMove : enemyMove}`;\n  };\n\n  return (\n    <div className=\"BattleArena\">\n      <h2>Battle Results</h2>\n      <p>{simulateBattle()}</p>\n    </div>\n  );\n}\n\nexport default BattleArena;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,WAAWA,CAAAC,IAAA,CAAyD,IAAxD,CAAEC,aAAa,CAAEC,UAAU,CAAEC,YAAY,CAAEC,SAAU,CAAC,CAAAJ,IAAA,CACzE,KAAM,CAAAK,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,SAAS,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CACrC,KAAM,CAAAC,MAAM,CAAGH,SAAS,CAAGL,aAAa,CAACS,IAAI,CAAGP,YAAY,CAACO,IAAI,CACjE,mBAAAC,MAAA,CAAoBF,MAAM,YAAAE,MAAA,CAAUL,SAAS,CAAGJ,UAAU,CAAGE,SAAS,EACxE,CAAC,CAED,mBACEN,KAAA,QAAKc,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BjB,IAAA,OAAAiB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBjB,IAAA,MAAAiB,QAAA,CAAIR,cAAc,CAAC,CAAC,CAAI,CAAC,EACtB,CAAC,CAEV,CAEA,cAAe,CAAAN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}